package ru.airdead.hudrenderer.stuffimport net.minecraft.client.MinecraftClientimport ru.airdead.hudrenderer.event.HudEventclass ClientApi {    private val eventListeners = mutableMapOf<Class<out HudEvent>, MutableList<(HudEvent) -> Unit>>()    fun minecraft(): MinecraftClient? = MinecraftClient.getInstance()    fun <T : HudEvent> registerEvent(eventClass: Class<T>, listener: (T) -> Unit) {        eventListeners.computeIfAbsent(eventClass) { mutableListOf() }.add(listener as (HudEvent) -> Unit)    }    fun <T : HudEvent> triggerEvent(event: T) {        eventListeners[event::class.java]?.forEach { it(event) }    }    inline fun <reified T : HudEvent> onEvent(noinline listener: (T) -> Unit) {        registerEvent(T::class.java, listener)    }}